<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Docker常用命令]]></title>
    <url>%2F2019%2F06%2F15%2Fdocker%2F</url>
    <content type="text"><![CDATA[记录常用docker命令 docker基本命令 docker push 123$ sudo docker login --username=445436928@qq.com registry-vpc.cn-beijing.aliyuncs.com$ sudo docker tag [ImageId] registry-vpc.cn-beijing.aliyuncs.com/w_yufan/my_images:[镜像版本号]$ sudo docker push registry-vpc.cn-beijing.aliyuncs.com/w_yufan/my_images:[镜像版本号] docker镜像操作 mysql 12docker run --name first-mysql -p 3306:3306 -d -v /opt/docker_v/mysql/my.conf:/etc/mysql/mysql.conf.d/mysqld.cnf -v /opt/docker_v/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root mysqldocker exec -it first-mysql /bin/bash redis 1docker run --name first_redis -p 6379:6379 -v /opt/docker_v/redis/data:/data -v /opt/docker_v/redis/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server --appendonly yes ssr 1docker run -d --name ssr -p 8989:8989 malaohu/ssr-with-net-speeder -s 0.0.0.0 -p 8989 -k yf0720 -m rc4-md5 -o http_simple -O auth_sha1_v4 mongodb 12345678910docker run --name mongo01 -p 27017:27017 -v /opt/docker_v/mongo:/data/db -d mongo --authdocker exec -it mongo01 /bin/bashmongouse admindb.createUser(&#123;user:&quot;root&quot;,pwd:&quot;root&quot;,roles:[&#123;role:&quot;root&quot;,db:&quot;admin&quot;&#125;]&#125;)exitmongo 宿主机ip/admin -uroot -puse admindb.auth(&quot;admin&quot;,&quot;admin&quot;)db.createUser(&#123;user: &quot;root&quot;,pwd: &quot;root&quot;,roles: [&#123; role: &quot;readWrite&quot;, db: &quot;admin&quot;&#125;]&#125;) java 1docker run -it --name java02 -p 1001:1001 -v /root/software:/mnt/software java jenkins 1docker run -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts gitlab 1docker run --detach --hostname gitlab.example.com --publish 443:443 --publish 80:80 --publish 23:22 --name gitlab --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:latest zookeeper 12docker pull zookeeperdocker run --privileged=true -d --name zookeeper --publish 2181:2181 -d zookeeper:latest]]></content>
      <categories>
        <category>command</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用命令]]></title>
    <url>%2F2019%2F06%2F15%2Fgit%2F</url>
    <content type="text"><![CDATA[记录常用git命令 git pull所有远程分支 123git branch -r | grep -v &apos;\-&gt;&apos; | while read remote; do git branch --track &quot;$&#123;remote#origin/&#125;&quot; &quot;$remote&quot;; donegit fetch --allgit pull --all 秘钥 1234567891011121314151617// 设置全局git config --global user.name “用户名”git config --global user.email “邮箱”// 生成秘钥ssh-keygen -t rsa// 查看秘钥cat ~/.ssh/id_rsa.pub// 生成多个秘钥ssh-keygen -t rsa -C &apos;second@mail.com&apos; -f id_rsa_second// ~/.SSH config文件配置秘钥映射Host gitlab.xxx.com ##可以随意命名，链接时使用这个名字 HostName gitlab.xxx.com User git Port 22 IdentityFile ~/.ssh/id_rsa_second// 测试配置文件是否正常ssh -T git@gitcafe.com]]></content>
      <categories>
        <category>command</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux常用命令]]></title>
    <url>%2F2019%2F06%2F15%2Flinux%2F</url>
    <content type="text"><![CDATA[记录常用linux命令]]></content>
      <categories>
        <category>command</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
